---

- name: ensure vault is ready
  block:

    - name: ensure vault is unsealed
      ansible.builtin.command:
        cmd: vault status
      register: vault_status

  rescue:

    - name: the command "vault status" returned nonzero
      ansible.builtin.fail:
        msg: |
          "vault status" returned {{ vault_status.rc }}; perhaps check up on the section
          named "Environment Variables" here https://www.vaultproject.io/docs/commands

          The exit code reflects the seal status:
            - 0 - unsealed
            - 1 - error
            - 2 - sealed

          also, check on $VAULT_ADDR, we currently have it as:
          VAULT_ADDR="{{ lookup('ansible.builtin.env', 'VAULT_ADDR') }}"

- name: ensure vault approle auth
  block:

    - name: ensure vault approle auth is enabled
      ansible.builtin.command:
        cmd: vault auth enable approle
      register: vault_approle

  rescue:

    - name: the command "vault auth enable approle" returned nonzero
      ansible.builtin.fail:
        msg: |
          "vault auth enable approle" returned {{ vault_approle.rc }}; perhaps check up
          the documentation here https://www.vaultproject.io/docs/auth/approle
      when:
        - vault_approle.stderr is not search("path is already in use at approle/")

- name: ensure vault acl for read on vault secret/*
  block:

    - name: create a tempfile for awx acl
      ansible.builtin.tempfile:
        state: file
        suffix: hcl
      register: awx_acl

    - name: create awx acl
      ansible.builtin.copy:
        dest: "{{ awx_acl.path }}"
        content: |
          path "secret/*" {
            capabilities = [ "read" ]
          }

    - name: write (apply) awx acl
      ansible.builtin.command:
        cmd: vault policy write {{ vault_acl_name }} {{ awx_acl.path }}
      register: vault_policy_write

  rescue:

    - name: unable to write an acl in vault
      ansible.builtin.fail:
        msg: |
          reach out to your Vault administrators for help:
          {{ vault_policy_write }}

  always:

    - name: clean up awx acl tempfile
      ansible.builtin.file:
        state: absent
        path: "{{ awx_acl.path }}"

- name: ensure vault role applied to awx acl
  block:

    - name: create awx role in vault
      ansible.builtin.command:
        cmd: |
          vault write auth/approle/role/{{ vault_role_name }}
            token_num_uses=0
            token_ttl=0m
            secret_id_num_uses=0
            token_no_default_policy=false
            token_policies="{{ vault_acl_name }}"
      register: vault_auth_approle_write

  rescue:

    - name: unable to apply approle auth in vault
      ansible.builtin.fail:
        msg: |
          reach out to your Vault administrators for help:
          {{ vault_auth_approle_write }}

- name: fetch role_id and secret_id
  block:

    - name: fetch vault role_id
      ansible.builtin.command:
        cmd: vault read auth/approle/role/{{ vault_role_name }}/role-id
      register: role_id

    - name: fetch vault secret_id
      ansible.builtin.command:
        cmd: vault write -f auth/approle/role/{{ vault_role_name }}/secret-id
      register: secret_id

    - name: show vault role_id and secret_id
      ansible.builtin.debug:
        msg: |
          vault role_id:
            {{ role_id.stdout }}
          vault secret_id:
            {{ secret_id.stdout }}

          export these as $VAULT_ROLE_ID and $VAULT_SECRET_ID

          ansible/inventory.yml uses them in order to create
          the hashivault secret lookup credential in awx

  rescue:

    - name: unable to fetch role_id and secret_id
      ansible.builtin.fail:
        msg: |
          reach out to your Vault administrators for help:
            role_id:
              {{ role_id }}
            secret_id:
              {{ secret_id }}

- name: create awx service account secret
  when:
    - awx_service_account is defined
    - awx_service_account.name is defined
    - awx_service_account.ssh_private_key is defined
    - awx_service_account.ssh_public_key is defined
    - awx_service_account.ssh_passphrase is defined
  block:

    # TODO: ansible-galaxy install 'git+https://github.com/TerryHowe/ansible-modules-hashivault.git'
    # TODO: not sure how to do ^ in collections/requirements.yml
    # TODO: this is all kind of broken; just use the CLI

    - name: create vault secret for awx service account
      ansible.builtin.shell:
        cmd: |
          vault kv put secret/{{ awx_service_account.name }} \
            password="{{ awx_service_account.password }}" \
            ssh_private_key="{{ awx_service_account.ssh_private_key }}" \
            ssh_public_key="{{ awx_service_account.ssh_public_key }}" \
            ssh_passphrase="{{ awx_service_account.ssh_passphrase }}"
      no_log: true

- name: create custom secret
  when:
    - custom_secret is defined
    - custom_secret.name is defined
    - custom_secret.secret1 is defined
    - custom_secret.secret2 is defined
  block:

    # TODO: ansible-galaxy install 'git+https://github.com/TerryHowe/ansible-modules-hashivault.git'
    # TODO: not sure how to do ^ in collections/requirements.yml
    # TODO: this is all kind of broken; just use the CLI

    - name: create vault secret for custom secret
      ansible.builtin.shell:
        cmd: |
          vault kv put secret/{{ custom_secret.name }} \
            secret1="{{ custom_secret.secret1 }}" \
            secret2="{{ custom_secret.secret2 }}"
      no_log: true
